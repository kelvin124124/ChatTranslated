<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Alliance" xml:space="preserve">
    <value>アライアンス</value>
  </data>
  <data name="AllLanguages" xml:space="preserve">
    <value>全ての言語</value>
  </data>
  <data name="APIKeyWarn" xml:space="preserve">
    <value>警告：API キーがプラグインの設定にプレーンテキストとして保存されます。
マルウェアやサードパーティ製プラグインがキーにアクセスできる可能性があります。</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>適用</value>
  </data>
  <data name="AskProceed" xml:space="preserve">
    <value>続行しますか？</value>
  </data>
  <data name="ChannelSelection" xml:space="preserve">
    <value>チャンネル選択</value>
  </data>
  <data name="ChatIntegration" xml:space="preserve">
    <value>チャット統合</value>
  </data>
  <data name="Chinese (Simplified)" xml:space="preserve">
    <value>中国語（簡体字）</value>
  </data>
  <data name="Chinese (Traditional)" xml:space="preserve">
    <value>中国語（繁体字）</value>
  </data>
  <data name="CrossLinkShell1" xml:space="preserve">
    <value>CWLS1</value>
  </data>
  <data name="CrossLinkShell2" xml:space="preserve">
    <value>CWLS2</value>
  </data>
  <data name="CrossLinkShell3" xml:space="preserve">
    <value>CWLS3</value>
  </data>
  <data name="CrossLinkShell4" xml:space="preserve">
    <value>CWLS4</value>
  </data>
  <data name="CrossLinkShell5" xml:space="preserve">
    <value>CWLS5</value>
  </data>
  <data name="CrossLinkShell6" xml:space="preserve">
    <value>CWLS6</value>
  </data>
  <data name="CrossLinkShell7" xml:space="preserve">
    <value>CWLS7</value>
  </data>
  <data name="CrossLinkShell8" xml:space="preserve">
    <value>CWLS8</value>
  </data>
  <data name="CrossParty" xml:space="preserve">
    <value>クロスパーティー</value>
  </data>
  <data name="CustomLanguages" xml:space="preserve">
    <value>カスタム言語</value>
  </data>
  <data name="CustomTargetLanguageExplanation" xml:space="preserve">
    <value>カスタム言語を使用する場合、Google翻訳を強制使用します。</value>
  </data>
  <data name="CustomTargetLanguageHeader" xml:space="preserve">
    <value>カスタムターゲット言語</value>
  </data>
  <data name="DeepL" xml:space="preserve">
    <value>DeepL</value>
  </data>
  <data name="DeepLAPIKey" xml:space="preserve">
    <value>DeepL APIキー（任意）</value>
  </data>
  <data name="DeepLExplanation" xml:space="preserve">
    <value>チャットメッセージの翻訳には DeepL が使用されます。
バックアップとして Google と Bing 翻訳が使用されます。
下記に DeepL API キーが提供された場合は、代わりにバックアップとして使用されます。</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>デフォルト</value>
  </data>
  <data name="DefaultFilteringExplaination" xml:space="preserve">
    <value>推奨されます。非ラテンベースの言語を翻訳します。
（日本語、韓国語、中国語など）</value>
  </data>
  <data name="DomaStr" xml:space="preserve">
    <value>大丈夫です！</value>
  </data>
  <data name="EnableInDuties" xml:space="preserve">
    <value>戦闘コンテンツ内で有効にする</value>
  </data>
  <data name="EnablePlugin" xml:space="preserve">
    <value>プラグインを有効にする</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>英語</value>
  </data>
  <data name="FreeCompany" xml:space="preserve">
    <value>フリーカンパニー</value>
  </data>
  <data name="French" xml:space="preserve">
    <value>フランス語</value>
  </data>
  <data name="GenericChannels" xml:space="preserve">
    <value>一般</value>
  </data>
  <data name="German" xml:space="preserve">
    <value>ドイツ語</value>
  </data>
  <data name="GGstr" xml:space="preserve">
    <value>お疲れ様でした。</value>
  </data>
  <data name="Japanese" xml:space="preserve">
    <value>日本語</value>
  </data>
  <data name="Korean" xml:space="preserve">
    <value>韓国語</value>
  </data>
  <data name="LLMProvider" xml:space="preserve">
    <value>LLMProvider</value>
  </data>
  <data name="LLM_Explanation" xml:space="preserve">
    <value>自ホスト gemma-2-27b-it プロキシ

注意：
DeepL は単一言語翻訳において高い精度を持っています。
LLM はメッセージが長い場合または複数言語を含む場合のみに優れています。</value>
  </data>
  <data name="Ls1" xml:space="preserve">
    <value>LS1</value>
  </data>
  <data name="Ls2" xml:space="preserve">
    <value>LS2</value>
  </data>
  <data name="Ls3" xml:space="preserve">
    <value>LS3</value>
  </data>
  <data name="Ls4" xml:space="preserve">
    <value>LS4</value>
  </data>
  <data name="Ls5" xml:space="preserve">
    <value>LS5</value>
  </data>
  <data name="Ls6" xml:space="preserve">
    <value>LS6</value>
  </data>
  <data name="Ls7" xml:space="preserve">
    <value>LS7</value>
  </data>
  <data name="Ls8" xml:space="preserve">
    <value>LS8</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>いいえ</value>
  </data>
  <data name="NoviceNetwork" xml:space="preserve">
    <value>ビギナーチャンネル</value>
  </data>
  <data name="OpenAIAPIKey" xml:space="preserve">
    <value>OpenAI API キー</value>
  </data>
  <data name="OpenAIPriceEstimation" xml:space="preserve">
    <value>Price estimation: $0.4 /month</value>
  </data>
  <data name="Party" xml:space="preserve">
    <value>Party</value>
  </data>
  <data name="PluginLanguage" xml:space="preserve">
    <value>プラグイン言語</value>
  </data>
  <data name="PvPTeam" xml:space="preserve">
    <value>PvPチーム</value>
  </data>
  <data name="Region" xml:space="preserve">
    <value>地域</value>
  </data>
  <data name="Say" xml:space="preserve">
    <value>Say</value>
  </data>
  <data name="SeeLanguageList" xml:space="preserve">
    <value>言語リストを見る</value>
  </data>
  <data name="Shout" xml:space="preserve">
    <value>Shout</value>
  </data>
  <data name="SourceLang" xml:space="preserve">
    <value>翻訳する言語</value>
  </data>
  <data name="SourceLangSelection" xml:space="preserve">
    <value>ソース言語の選択</value>
  </data>
  <data name="Spanish" xml:space="preserve">
    <value>スペイン語</value>
  </data>
  <data name="TargetLang" xml:space="preserve">
    <value>翻訳先</value>
  </data>
  <data name="TellIncoming" xml:space="preserve">
    <value>Tell</value>
  </data>
  <data name="Translate" xml:space="preserve">
    <value>翻訳</value>
  </data>
  <data name="TranslateAllExplaination" xml:space="preserve">
    <value>すべての受信メッセージを翻訳します。

言語選択にご希望の言語が見つかりませんか？
プラグインインストーラーからフィードバックをお送りください！</value>
  </data>
  <data name="TranslateButtonTooltip" xml:space="preserve">
    <value>翻訳ボタンはメインウィンドウに翻訳文を表示するだけです。
チャットに翻訳文を送信したり、他のプレイヤーに見えるようにすることはありません。</value>
  </data>
  <data name="TranslationEngine" xml:space="preserve">
    <value>翻訳エンジン</value>
  </data>
  <data name="UseCustomTargetLanguage" xml:space="preserve">
    <value>カスタム言語を使用</value>
  </data>
  <data name="WelcomeStr" xml:space="preserve">
    <value>よろしくお願いします！</value>
  </data>
  <data name="Yell" xml:space="preserve">
    <value>Yell</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>はい</value>
  </data>
  <data name="ChatIntegration_HideOriginal" xml:space="preserve">
    <value>翻訳メッセージを出力する際に元のメッセージを非表示にする</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>一般</value>
  </data>
  <data name="Languages" xml:space="preserve">
    <value>言語</value>
  </data>
  <data name="Chat Channels" xml:space="preserve">
    <value>チャットチャンネル</value>
  </data>
  <data name="Translation Mode" xml:space="preserve">
    <value>翻訳モード</value>
  </data>
  <data name="ChatIntegration_ShowColoredText" xml:space="preserve">
    <value>Show colored text when outputting translated message</value>
  </data>
</root>